*** sources/ejabberd_2.1.x/src/ejabberd_app.erl	2011-11-23 01:37:21.000000000 +0100
--- sources/ejabberd_mongo/src/ejabberd_app.erl	2011-11-23 01:37:38.000000000 +0100
***************
*** 5,11 ****
  %%% Created : 31 Jan 2003 by Alexey Shchepin <alexey@process-one.net>
  %%%
  %%%
! %%% ejabberd, Copyright (C) 2002-2011   ProcessOne
  %%%
  %%% This program is free software; you can redistribute it and/or
  %%% modify it under the terms of the GNU General Public License as
--- 5,11 ----
  %%% Created : 31 Jan 2003 by Alexey Shchepin <alexey@process-one.net>
  %%%
  %%%
! %%% ejabberd, Copyright (C) 2002-2010   ProcessOne
  %%%
  %%% This program is free software; you can redistribute it and/or
  %%% modify it under the terms of the GNU General Public License as
***************
*** 57,62 ****
--- 57,63 ----
      ejabberd_config:start(),
      ejabberd_check:config(),
      connect_nodes(),
+     maybe_start_emongo(),
      %% Loading ASN.1 driver explicitly to avoid races in LDAP
      catch asn1rt:load_driver(),
      Sup = ejabberd_sup:start_link(),
***************
*** 110,116 ****
  	ok -> ok;
  	{error, already_loaded} -> ok
      end,
!     Port = open_port({spawn, "expat_erl"}, [binary]),
      loop(Port).
  
  
--- 111,117 ----
  	ok -> ok;
  	{error, already_loaded} -> ok
      end,
!     Port = open_port({spawn, expat_erl}, [binary]),
      loop(Port).
  
  
***************
*** 197,202 ****
--- 198,220 ----
  	_ -> ok
      end.
  
+ maybe_start_emongo() ->
+     Mongo = lists:any(
+ 	      fun(Host) ->
+ 		      case ejabberd_config:get_local_option({odbc_server, Host}) of
+ 		      	  undefined ->
+ 		      	      false;
+ 		      	  DB ->
+ 		      	      case element(1, DB) of
+ 		      		  mongo -> true;
+ 		      		  _ -> false
+ 		      	      end
+ 		      end
+ 	      end, ?MYHOSTS),
+     if Mongo -> application:start(emongo);
+        true -> ok
+     end.
+ 
  add_windows_nameservers() ->
      IPTs = win32_dns:get_nameservers(),
      ?INFO_MSG("Adding machine's DNS IPs to Erlang system:~n~p", [IPTs]),
